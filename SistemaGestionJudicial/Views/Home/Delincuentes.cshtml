
@model List<SistemaGestionJudicial.Models.Persona>

    @{
        ViewData["Title"] = "Delincuentes";
        var requestToken = Html.AntiForgeryToken();
    }

   

    @section Styles {
        <link rel="stylesheet" href="~/css/delincuentes.css" />
        <script src="https://cdn.tailwindcss.com"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
        <style>
            /* Estilos básicos para el acordeón de juicios */
            .accordion-header {
                background-color: #f3f4f6; /* bg-gray-100 */
                padding: 0.75rem 1rem;
                border-radius: 0.5rem; /* rounded-lg */
                cursor: pointer;
                display: flex;
                justify-content: space-between;
                align-items: center;
                font-weight: 600; /* font-semibold */
                color: #4b5563; /* text-gray-700 */
                transition: background-color 0.2s ease;
            }

                .accordion-header:hover {
                    background-color: #e5e7eb; /* hover:bg-gray-200 */
                }

            .accordion-content {
                max-height: 0;
                overflow: hidden;
                transition: max-height 0.3s ease-out, padding 0.3s ease-out;
                padding: 0 1rem; /* Padding horizontal inicial */
                border-left: 2px solid #d1d5db; /* border-gray-300 */
                margin-left: 0.75rem; /* ml-3 */
                background-color: #ffffff; /* bg-white */
                border-radius: 0.5rem; /* rounded-lg */
            }

                .accordion-content.active {
                    max-height: 500px; /* Suficientemente grande para el contenido */
                    padding: 1rem; /* Padding cuando está activo */
                    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); /* shadow-sm */
                }

            /* Estilo para las sentencias dentro del acordeón */
            .sentencia-item {
                border-left: 2px solid #a7f3d0; /* border-green-300 */
                padding-left: 0.75rem;
                margin-bottom: 0.5rem;
                background-color: #f7fee7; /* bg-green-50 */
                border-radius: 0.25rem;
                padding: 0.5rem;
            }

            /* Ajuste para el modal de añadir/editar delincuente */
            #add-offender-modal .modal-content, #edit-offender-modal .modal-content {
                max-height: 90vh;
                overflow-y: auto;
                width: 95%;
                max-width: 600px;
            }
        </style>
    }

    <div class="flex h-screen overflow-hidden">
        <div class="flex-1 overflow-auto">
            <header class="bg-white shadow-sm py-4 px-6 flex justify-between items-center no-print">
                <h2 class="text-xl font-semibold text-gray-800" id="view-title">Gestión de Delincuentes</h2>
                <div class="flex items-center space-x-4">
                    <div class="relative">
                        @* Campo de búsqueda para filtrar la tabla *@
                        <input type="text" id="searchInput" onkeyup="filterTable()" placeholder="Buscar por cédula, nombre, género..."
                               class="pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
                    </div>
                    <div class="flex items-center space-x-2">
                        <div class="h-8 w-8 rounded-full bg-blue-500 flex items-center justify-center text-white">
                            <i class="fas fa-user"></i>
                        </div>
                        <span class="text-sm font-medium">
                        </span>

                    </div>
                </div>

            </header>

            <div class="p-6">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-2xl font-bold">Listado de Delincuentes</h2>
                    <button onclick="openAddModal()"
                            class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center">
                        <i class="fas fa-plus mr-2"></i> Añadir Delincuente
                    </button>
                </div>

                <div class="card bg-white rounded-lg p-6">
                    <div class="overflow-x-auto">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Cédula</th>
                                    <th>Nombre Completo</th>
                                    <th>Fecha Nacimiento</th>
                                    <th>Género</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody id="delincuentesTableBody">
                                @* AHORA EL CONTENIDO DE LA TABLA ESTÁ DIRECTAMENTE AQUÍ *@
                                @if (Model != null && Model.Any())
                                {
                                    @foreach (var persona in Model)
                                    {
                                        <tr id="row-@persona.IdPersona">
                                            @* Agrega un ID a la fila para fácil manipulación JS *@
                                            <td>@persona.IdPersona</td>
                                            <td>@persona.Cedula</td>
                                            <td>@($"{persona.Nombres} {persona.Apellidos}")</td>
                                            <td>@(persona.FechaNacimiento?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                                            <td>
                                                @{
                                                    string generoDisplay = "N/A";
                                                    if (persona.Genero == "M")
                                                    {
                                                        generoDisplay = "Masculino";
                                                    }
                                                    else if (persona.Genero == "F")
                                                    {
                                                        generoDisplay = "Femenino";
                                                    }
                                                    else if (persona.Genero == "O")
                                                    {
                                                        generoDisplay = "Otro";
                                                    }
                                                }
                                                @generoDisplay
                                            </td>
                                            <td class="flex items-center space-x-2">
                                                <button onclick="fetchAndOpenDetailModal(@persona.IdPersona)"
                                                        class="text-blue-600 hover:text-blue-900 focus:outline-none">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button onclick="openEditModal(@persona.IdPersona)"
                                                        class="text-yellow-600 hover:text-yellow-900 focus:outline-none">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button onclick="confirmDelete(@persona.IdPersona)"
                                                        class="text-red-600 hover:text-red-900 focus:outline-none">
                                                    <i class="fas fa-trash-alt"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center py-4 text-gray-500">No se encontraron delincuentes con IdRol = 3.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                </div>
            </div>
        </div>
    </div>

    @* MODALES (sin cambios, ya los tienes correctos) *@
    @* MODAL DE DETALLES *@
    <div id="offender-detail-modal"
         class="modal hidden fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center z-50">
        <div class="modal-content bg-white rounded-lg p-6 w-full max-w-2xl overflow-y-auto max-h-[90vh]">
            <h3 class="text-lg font-bold mb-4">Detalles del Delincuente</h3>
            <div class="flex flex-col md:flex-row gap-6">
                <div class="w-full md:w-1/3">
                    <div class="bg-gray-100 rounded-lg overflow-hidden mb-2">
                        <img id="detail-image" src="https://randomuser.me/api/portraits/lego/1.jpg"
                             class="w-full h-auto object-cover">
                    </div>
                </div>
                <div class="w-full md:w-2/3" id="offender-details">
                    <p><strong>ID:</strong> <span id="detail-id"></span></p>
                    <p><strong>Cédula:</strong> <span id="detail-cedula"></span></p>
                    <p><strong>Nombre:</strong> <span id="detail-name"></span></p>
                    <p><strong>Fecha Nacimiento:</strong> <span id="detail-dob"></span></p>
                    <p><strong>Género:</strong> <span id="detail-gender"></span></p>
                    <p><strong>Dirección:</strong> <span id="detail-direccion"></span></p>
                    <p><strong>Teléfono:</strong> <span id="detail-telefono"></span></p>
                    <p><strong>Correo:</strong> <span id="detail-correo"></span></p>
                </div>
            </div>

            <div class="mt-6">
                <h4 class="text-xl font-bold mb-3 text-gray-800">Juicios Asociados:</h4>
                <div id="detail-juicios">
                    @* El contenido de los juicios se generará dinámicamente aquí con JavaScript *@
                </div>
            </div>

            <div class="flex justify-end mt-4">
                <button type="button" class="bg-gray-500 text-white px-4 py-2 rounded-lg"
                        onclick="closeModal('offender-detail-modal')">
                    Cerrar
                </button>
            </div>
        </div>
    </div>

    @* MODAL PARA AÑADIR DELINCUENTE *@
    <div id="add-offender-modal"
         class="modal hidden fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center z-50">
        <div class="modal-content bg-white rounded-lg p-6 w-full max-w-md">
            <h3 class="text-lg font-bold mb-4">Añadir Nuevo Delincuente</h3>
            <form id="addDelincuenteForm" method="post" action="/Delincuentes/Create">
                @requestToken
                <div class="mb-4">
                    <label for="addNombres" class="block text-gray-700 text-sm font-bold mb-2">Nombres:</label>
                    <input type="text" id="addNombres" name="Nombres" required
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="addApellidos" class="block text-gray-700 text-sm font-bold mb-2">Apellidos:</label>
                    <input type="text" id="addApellidos" name="Apellidos" required
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="addFechaNacimiento" class="block text-gray-700 text-sm font-bold mb-2">Fecha Nacimiento:</label>
                    <input type="date" id="addFechaNacimiento" name="FechaNacimiento"
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="addGenero" class="block text-gray-700 text-sm font-bold mb-2">Género:</label>
                    <select id="addGenero" name="Genero"
                            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                        <option value="">Seleccione</option>
                        <option value="M">Masculino</option>
                        <option value="F">Femenino</option>
                        <option value="O">Otro</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label for="addCedula" class="block text-gray-700 text-sm font-bold mb-2">Cédula:</label>
                    <input type="text" id="addCedula" name="Cedula" required
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="addDireccion" class="block text-gray-700 text-sm font-bold mb-2">Dirección:</label>
                    <input type="text" id="addDireccion" name="Direccion"
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="addTelefono" class="block text-gray-700 text-sm font-bold mb-2">Teléfono:</label>
                    <input type="text" id="addTelefono" name="Telefono"
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="addCorreoElectronico" class="block text-gray-700 text-sm font-bold mb-2">Correo Electrónico:</label>
                    <input type="email" id="addCorreoElectronico" name="CorreoElectronico"
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>

                <div class="flex items-center justify-between">
                    <button type="button" class="bg-gray-500 text-white px-4 py-2 rounded-lg"
                            onclick="closeModal('add-offender-modal')">
                        Cancelar
                    </button>
                    <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg">
                        Guardar Delincuente
                    </button>
                </div>
            </form>
        </div>
    </div>

    @* MODAL PARA EDITAR DELINCUENTE (NUEVO) *@
    <div id="edit-offender-modal"
         class="modal hidden fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center z-50">
        <div class="modal-content bg-white rounded-lg p-6 w-full max-w-md">
            <h3 class="text-lg font-bold mb-4">Editar Delincuente</h3>
            <form id="editDelincuenteForm" method="post" action="/Delincuentes/Edit">
                @requestToken
                <input type="hidden" id="editIdPersona" name="IdPersona" />
                <div class="mb-4">
                    <label for="editNombres" class="block text-gray-700 text-sm font-bold mb-2">Nombres:</label>
                    <input type="text" id="editNombres" name="Nombres" required
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="editApellidos" class="block text-gray-700 text-sm font-bold mb-2">Apellidos:</label>
                    <input type="text" id="editApellidos" name="Apellidos" required
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="editFechaNacimiento" class="block text-gray-700 text-sm font-bold mb-2">Fecha Nacimiento:</label>
                    <input type="date" id="editFechaNacimiento" name="FechaNacimiento"
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="editGenero" class="block text-gray-700 text-sm font-bold mb-2">Género:</label>
                    <select id="editGenero" name="Genero"
                            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                        <option value="">Seleccione</option>
                        <option value="M">Masculino</option>
                        <option value="F">Femenino</option>
                        <option value="O">Otro</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label for="editCedula" class="block text-gray-700 text-sm font-bold mb-2">Cédula:</label>
                    <input type="text" id="editCedula" name="Cedula" required
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="editDireccion" class="block text-gray-700 text-sm font-bold mb-2">Dirección:</label>
                    <input type="text" id="editDireccion" name="Direccion"
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="editTelefono" class="block text-gray-700 text-sm font-bold mb-2">Teléfono:</label>
                    <input type="text" id="editTelefono" name="Telefono"
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label for="editCorreoElectronico" class="block text-gray-700 text-sm font-bold mb-2">Correo Electrónico:</label>
                    <input type="email" id="editCorreoElectronico" name="CorreoElectronico"
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>

                <div class="flex items-center justify-between">
                    <button type="button" class="bg-gray-500 text-white px-4 py-2 rounded-lg"
                            onclick="closeModal('edit-offender-modal')">
                        Cancelar
                    </button>
                    <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg">
                        Actualizar Delincuente
                    </button>
                </div>
            </form>
        </div>
    </div>

    @* MODAL DE CONFIRMACIÓN DE ELIMINACIÓN (NUEVO) *@
    <div id="delete-confirm-modal"
         class="modal hidden fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center z-50">
        <div class="modal-content bg-white rounded-lg p-6 w-full max-w-sm text-center">
            <h3 class="text-lg font-bold mb-4">Confirmar Eliminación</h3>
            <p class="mb-6">¿Estás seguro de que quieres eliminar al delincuente con ID: <strong id="delete-id-display"></strong>?</p>
            <div class="flex justify-center gap-4">
                <button type="button" class="bg-gray-500 text-white px-4 py-2 rounded-lg"
                        onclick="closeModal('delete-confirm-modal')">
                    Cancelar
                </button>
                <button type="button" id="confirmDeleteButton" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg">
                    Eliminar
                </button>
            </div>

        </div>
    </div>
    <script>
        const antiForgeryToken = '@requestToken.ToString().Replace("\"", "'")';
        const antiForgeryHeaderName = antiForgeryToken.split('=')[0].replace('<input name=', '').replace('type=\'hidden\' value=\'', '').replace('\' />', '').trim();
        const antiForgeryTokenValue = antiForgeryToken.split('value=\'')[1].replace('\' />', '').trim();

        function openModal(modalId) {
            document.getElementById(modalId).classList.remove('hidden');
        }

        function closeModal(modalId) {
            document.getElementById(modalId).classList.add('hidden');
        }

        // --- FUNCIONALIDAD PARA RECARGAR LA TABLA ---
        // Esta función ahora obtendrá la lista completa de delincuentes y reconstruirá el tbody.
        async function reloadTable() {
            try {
                // Llama a una nueva acción en el controlador que devuelva la lista de delincuentes como JSON
                const response = await fetch('/Delincuentes/GetDelincuentesList'); // Necesitarás crear esta acción
                if (!response.ok) {
                    throw new Error('Error al recargar la tabla.');
                }
                const delincuentes = await response.json(); // Recibe la lista de delincuentes

                const tableBody = document.getElementById('delincuentesTableBody');
                tableBody.innerHTML = ''; // Limpia el contenido actual de la tabla

                if (delincuentes && delincuentes.length > 0) {
                    delincuentes.forEach(persona => {
                        let generoDisplay = "N/A";
                        if (persona.genero === "M") {
                            generoDisplay = "Masculino";
                        } else if (persona.genero === "F") {
                            generoDisplay = "Femenino";
                        } else if (persona.genero === "O") {
                            generoDisplay = "Otro";
                        }

                        const row = `
                            <tr id="row-${persona.idPersona}">
                                <td>${persona.idPersona}</td>
                                <td>${persona.cedula}</td>
                                <td>${persona.nombres} ${persona.apellidos}</td>
                                <td>${persona.fechaNacimiento || 'N/A'}</td>
                                <td>${generoDisplay}</td>
                                <td class="flex items-center space-x-2">
                                    <button onclick="fetchAndOpenDetailModal(${persona.idPersona})"
                                            class="text-blue-600 hover:text-blue-900 focus:outline-none">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button onclick="openEditModal(${persona.idPersona})"
                                            class="text-yellow-600 hover:text-yellow-900 focus:outline-none">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button onclick="confirmDelete(${persona.idPersona})"
                                            class="text-red-600 hover:text-red-900 focus:outline-none">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                            </tr>
                        `;
                        tableBody.insertAdjacentHTML('beforeend', row); // Añade la nueva fila
                    });
                } else {
                    tableBody.innerHTML = `<tr><td colspan="6" class="text-center py-4 text-gray-500">No se encontraron delincuentes con IdRol = 3.</td></tr>`;
                }
                filterTable(); // Reaplicar el filtro si hay uno activo
            } catch (error) {
                console.error('Error recargando la tabla:', error);
                alert('No se pudo recargar la lista de delincuentes.');
            }
        }

        // --- FUNCIONALIDAD PARA AÑADIR DELINCUENTE ---
        function openAddModal() {
            document.getElementById('addDelincuenteForm').reset();
            openModal('add-offender-modal');
        }

        document.getElementById('addDelincuenteForm').addEventListener('submit', async function (event) {
            event.preventDefault();

            const formData = new FormData(this);
            const data = {};
            formData.forEach((value, key) => data[key] = value);
            data[antiForgeryHeaderName] = antiForgeryTokenValue;

            try {
                const response = await fetch(this.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        [antiForgeryHeaderName]: antiForgeryTokenValue
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();


                if (result.success) {
                    alert(result.message);
                    closeModal('add-offender-modal');
                    await reloadTable(); // Recargar la tabla con el nuevo delincuente
                } else {
                    alert(`Error: ${result.message}\n${(result.errors ? result.errors.join('\n') : '')}`);
                }
            } catch (error) {
                console.error('Error al añadir delincuente:', error);
                alert('Error al añadir delincuente. Intente de nuevo.');
            }
        });

        // --- FUNCIONALIDAD PARA EDITAR DELINCUENTE ---
        async function openEditModal(id) {
            try {
                const response = await fetch(`/Delincuentes/GetDelincuenteDetails/${id}`);
                if (!response.ok) {
                    alert('Error al obtener los detalles del delincuente para editar.');
                    return;
                }
                const persona = await response.json();

                // Pre-poblar el formulario de edición
                document.getElementById('editIdPersona').value = persona.id;
                document.getElementById('editNombres').value = persona.nombres;
                document.getElementById('editApellidos').value = persona.apellidos;
                document.getElementById('editFechaNacimiento').value = persona.fechaNacimiento || '';
                document.getElementById('editGenero').value = persona.genero || '';
                document.getElementById('editCedula').value = persona.cedula;
                document.getElementById('editDireccion').value = persona.direccion || '';
                document.getElementById('editTelefono').value = persona.telefono || '';
                document.getElementById('editCorreoElectronico').value = persona.correoElectronico || '';

                openModal('edit-offender-modal');

            } catch (error) {
                console.error('Error al abrir el modal de edición:', error);
                alert('No se pudo cargar los datos del delincuente para editar.');
            }

        }
    }

    document.getElementById('editDelincuenteForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        const formData = new FormData(this);
        const data = {};
        formData.forEach((value, key) => data[key] = value);
        data[antiForgeryHeaderName] = antiForgeryTokenValue;

        const id = document.getElementById('editIdPersona').value;


        document.getElementById('editDelincuenteForm').addEventListener('submit', async function (event) {
            event.preventDefault();

            const formData = new FormData(this);
            const data = {};
            formData.forEach((value, key) => data[key] = value);
            data[antiForgeryHeaderName] = antiForgeryTokenValue;

            const id = document.getElementById('editIdPersona').value;

            try {
                const response = await fetch(`/Delincuentes/Edit/${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        [antiForgeryHeaderName]: antiForgeryTokenValue
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (result.success) {
                    alert(result.message);
                    closeModal('edit-offender-modal');
                    // Actualizar solo la fila relevante en la tabla, si es posible, o recargar.
                    // Para simplificar, recargaremos toda la tabla.
                    await reloadTable();
                } else {
                    alert(`Error: ${result.message}\n${(result.errors ? result.errors.join('\n') : '')}`);
                }
            } catch (error) {
                console.error('Error al actualizar delincuente:', error);
                alert('Error al actualizar delincuente. Intente de nuevo.');
            }
        });

        // --- FUNCIONALIDAD PARA ELIMINAR DELINCUENTE ---
        let delincuenteToDeleteId = null; // Variable para almacenar el ID del delincuente a eliminar

        function confirmDelete(id) {
            delincuenteToDeleteId = id;
            document.getElementById('delete-id-display').innerText = id;
            openModal('delete-confirm-modal');

        }
    });

    // --- FUNCIONALIDAD PARA ELIMINAR DELINCUENTE ---
    let delincuenteToDeleteId = null; // Variable para almacenar el ID del delincuente a eliminar

    function confirmDelete(id) {
        delincuenteToDeleteId = id;
        document.getElementById('delete-id-display').innerText = id;
        openModal('delete-confirm-modal');
    }

    document.getElementById('confirmDeleteButton').addEventListener('click', async function () {
        if (delincuenteToDeleteId === null) return;

        try {
            const response = await fetch(`/Delincuentes/Delete/${delincuenteToDeleteId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    [antiForgeryHeaderName]: antiForgeryTokenValue
                },
                body: JSON.stringify({ id: delincuenteToDeleteId }) // Enviar el ID en el cuerpo
            });


        document.getElementById('confirmDeleteButton').addEventListener('click', async function () {
            if (delincuenteToDeleteId === null) return;

            try {
                const response = await fetch(`/Delincuentes/Delete/${delincuenteToDeleteId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        [antiForgeryHeaderName]: antiForgeryTokenValue
                    },
                    body: JSON.stringify({ id: delincuenteToDeleteId }) // Enviar el ID en el cuerpo
                });

                const result = await response.json();

                if (result.success) {
                    alert(result.message);
                    closeModal('delete-confirm-modal');
                    // Eliminar la fila directamente del DOM
                    const rowToRemove = document.getElementById(`row-${delincuenteToDeleteId}`);
                    if (rowToRemove) {
                        rowToRemove.remove();
                    }
                    // Si la tabla queda vacía, mostrar el mensaje de "no encontrados"
                    const tableBody = document.getElementById('delincuentesTableBody');
                    if (tableBody.children.length === 0) {
                        tableBody.innerHTML = `<tr><td colspan="6" class="text-center py-4 text-gray-500">No se encontraron delincuentes con IdRol = 3.</td></tr>`;
                    }
                } else {
                    alert(`Error: ${result.message}`);
                }
            } catch (error) {
                console.error('Error al eliminar delincuente:', error);
                alert('Error al eliminar delincuente. Intente de nuevo.');
            } finally {
                delincuenteToDeleteId = null; // Resetear la variable
            }
        });

        // --- FUNCIONALIDAD PARA FILTRAR LA TABLA ---
        function filterTable() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const tableBody = document.getElementById('delincuentesTableBody');
            const trs = tableBody.getElementsByTagName('tr');

            for (let i = 0; i < trs.length; i++) {
                let found = false;
                // Asegúrate de que los índices de las columnas sean correctos
                const idTd = trs[i].getElementsByTagName('td')[0];
                const cedulaTd = trs[i].getElementsByTagName('td')[1];
                const nombreCompletoTd = trs[i].getElementsByTagName('td')[2];
                const generoTd = trs[i].getElementsByTagName('td')[4];

                // Evita procesar la fila de "No se encontraron delincuentes"
                if (trs[i].children.length < 6) { // Si tiene menos de 6 celdas, es la fila de mensaje
                    trs[i].style.display = 'none'; // Siempre oculta esta fila al filtrar
                    continue;
                }


                if (idTd && idTd.textContent.toLowerCase().includes(filter)) {
                    found = true;
                }
                if (cedulaTd && cedulaTd.textContent.toLowerCase().includes(filter)) {
                    found = true;
                }
                if (nombreCompletoTd && nombreCompletoTd.textContent.toLowerCase().includes(filter)) {
                    found = true;
                }
                if (generoTd && generoTd.textContent.toLowerCase().includes(filter)) {
                    const generoText = generoTd.textContent.toLowerCase();
                    if (generoText.includes(filter) ||
                        (filter === 'm' && generoText.includes('masculino')) ||
                        (filter === 'f' && generoText.includes('femenino')) ||
                        (filter === 'o' && generoText.includes('otro'))
                    ) {
                        found = true;
                    }
                }

                if (found) {
                    trs[i].style.display = '';
                } else {
                    trs[i].style.display = 'none';
                }
            }
        }


        // --- FUNCIONALIDAD PARA VER DETALLES ---
        async function fetchAndOpenDetailModal(id) {
            try {
                const response = await fetch(`/Delincuentes/GetDelincuenteDetails/${id}`);
                if (!response.ok) {
                    alert('Error al obtener los detalles del delincuente.');
                    return;
                }
                const persona = await response.json();

                document.getElementById('detail-id').innerText = persona.id;
                document.getElementById('detail-cedula').innerText = persona.cedula;
                document.getElementById('detail-name').innerText = `${persona.nombres} ${persona.apellidos}`;
                document.getElementById('detail-dob').innerText = persona.fechaNacimiento || 'N/A';
                document.getElementById('detail-gender').innerText = persona.genero === "M" ? "Masculino" : (persona.genero === "F" ? "Femenino" : "Otro");
                document.getElementById('detail-direccion').innerText = persona.direccion || 'N/A';
                document.getElementById('detail-telefono').innerText = persona.telefono || 'N/A';
                document.getElementById('detail-correo').innerText = persona.correoElectronico || 'N/A';

                document.getElementById('detail-image').src = `https://randomuser.me/api/portraits/${persona.genero === 'M' ? 'men' : 'women'}/${persona.id % 99}.jpg`;

                const juiciosContainer = document.getElementById('detail-juicios');
                juiciosContainer.innerHTML = ''; // Limpiar contenido previo

                if (persona.juiciosYDelitos && persona.juiciosYDelitos.length > 0) {
                    persona.juiciosYDelitos.forEach((item, index) => {
                        const juicioDiv = document.createElement('div');
                        juicioDiv.classList.add('mb-3');

                        const header = document.createElement('div');
                        header.classList.add('accordion-header', 'mb-2');
                        header.innerHTML = `
                            <span>Juicio #${item.idJuicio} - ${item.estadoJuicio || 'N/A'} (Delito: ${item.nombreDelito || 'Sin Especificar'})</span>
                            <i class="fas fa-chevron-down ml-2"></i>
                        `;
                        header.onclick = () => {
                            const content = juicioDiv.querySelector('.accordion-content');
                            content.classList.toggle('active');
                            const icon = header.querySelector('i');
                            icon.classList.toggle('fa-chevron-down');
                            icon.classList.toggle('fa-chevron-up');
                        };

                        const content = document.createElement('div');
                        content.classList.add('accordion-content');

                        // Iterar sobre la colección de 'sentencias'
                        let sentenciasHtml = '';
                        if (item.sentencias && item.sentencias.length > 0) {
                            sentenciasHtml += '<h5 class="text-sm font-semibold mt-3 mb-1 text-gray-700">Sentencias:</h5>';
                            item.sentencias.forEach(s => { // Iterar sobre cada sentencia
                                sentenciasHtml += `
                                    <div class="ml-4 border-l-2 border-green-200 pl-3 py-1 mb-2 bg-green-50 rounded-sm sentencia-item">
                                        <p class="mb-1"><strong>ID Sentencia:</strong> ${s.idSentencia || 'N/A'}</p>
                                        <p class="mb-1"><strong>Fecha:</strong> ${s.fechaSentencia || 'N/A'}</p>
                                        <p class="mb-1"><strong>Tipo:</strong> ${s.tipoSentencia || 'N/A'}</p>
                                        <p class="mb-1"><strong>Pena:</strong> ${s.pena || 'N/A'}</p>
                                        <p class="mb-1"><strong>Observaciones:</strong> ${s.observaciones || 'N/A'}</p>
                                    </div>
                                `;
                            });
                        } else {
                            sentenciasHtml = `<p class="text-gray-500 italic mt-3">No hay sentencias asociadas a este juicio.</p>`;
                        }

                        content.innerHTML = `
                            <p class="mb-1"><strong>ID Juicio Acusado:</strong> ${item.idJuicioAcusado || 'N/A'}</p>
                            <p class="mb-1"><strong>Estado:</strong> ${item.estadoJuicio || 'N/A'}</p>
                            <p class="mb-1"><strong>Inicio:</strong> ${item.fechaInicioJuicio || 'N/A'}</p>
                            <p class="mb-1"><strong>Fin:</strong> ${item.fechaFinJuicio || 'N/A'}</p>

                            <h5 class="text-sm font-semibold mt-3 mb-1 text-gray-700">Detalles del Delito:</h5>
                            <div class="ml-4 border-l-2 border-gray-200 pl-3 py-1 mb-2">
                                <p class="mb-1"><strong>Nombre:</strong> ${item.nombreDelito || 'N/A'}</p>
                                <p class="mb-1"><strong>Tipo:</strong> ${item.tipoDelito || 'N/A'}</p>
                                <p class="mb-1"><strong>Gravedad:</strong> ${item.gravedadDelito || 'N/A'}</p>
                                <p class="mb-1"><strong>Descripción:</strong> ${item.descripcionDelito || 'N/A'}</p>
                            </div>
                            ${sentenciasHtml}
                        `;

                        juicioDiv.appendChild(header);
                        juicioDiv.appendChild(content);
                        juiciosContainer.appendChild(juicioDiv);
                    });
                } else {
                    juiciosContainer.innerHTML = '<p class="text-gray-500 italic">No hay juicios asociados a este delincuente.</p>';
                }

                openModal('offender-detail-modal');

            } catch (error) {
                console.error('Error al obtener detalles del delincuente:', error);
                alert('No se pudo cargar los detalles del delincuente.');
            }
        }
    </script>

