@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Password Recovery | Judicial System Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
</head>

<body class="bg-gray-100 flex items-center justify-center h-screen" style="background-image: url('../images/RecuperacionCuenta.PNG');">

    <div class="login-card bg-white w-full max-w-md mx-4 shadow-lg rounded-lg p-8">

        <!-- Paso 1: Ingresar Email -->
        <div id="stepEmail">
            <div class="text-center mb-6">
                <i class="fas fa-unlock-alt text-blue-700 text-4xl mb-4"></i>
                <h1 class="text-2xl font-bold text-gray-700">Recuperar Contraseña</h1>
                <p class="text-sm text-gray-500 mt-2">Ingresa tu correo electrónico para recibir un token.</p>
            </div>

            <form id="recoveryForm" class="space-y-6">
                <!-- Aquí tus inputs y botón de generar token -->
                <div class="input-group relative">
                    <i class="fas fa-envelope input-icon absolute top-1/2 left-3 transform -translate-y-1/2 text-gray-400"></i>
                    <input type="email" id="email" name="email" placeholder="Correo electrónico" required
                           class="form-input input-with-icon pl-10 w-full border border-gray-300 p-3 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>

                <button type="submit"
                        class="btn-primary bg-blue-700 hover:bg-blue-800 text-white w-full py-2 px-4 rounded-md flex items-center justify-center">
                    <i class="fas fa-paper-plane mr-2"></i> Generar Token
                </button>
            </form>

            <!-- Aquí pega este bloque, justo después del formulario -->
            <!-- Contenedor para mostrar el token y botón copiar, oculto por defecto -->
            <div id="tokenContainer" class="hidden mt-4">
                <label for="generatedTokenField" class="block mb-1 text-gray-700 font-semibold">Tu token generado:</label>
                <input type="text" id="generatedTokenField" readonly
                       class="w-full border border-gray-300 p-2 rounded-md font-mono text-center bg-gray-100" />
                <button type="button" id="copyTokenBtn"
                        class="mt-2 w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-md">
                    Copiar Token
                </button>
            </div>

            <!-- Botón para avanzar al siguiente paso, inicialmente deshabilitado -->
            <button id="continueBtn" disabled
                    class="mt-6 w-full bg-green-600 hover:bg-green-700 text-white py-2 rounded-md flex items-center justify-center">
                <i class="fas fa-arrow-right mr-2"></i> Continuar
            </button>
        </div>

        <!-- Paso 2: Ingresar Token -->
        <div id="stepToken" class="hidden">
            <div class="text-center mb-6">
                <i class="fas fa-key text-blue-700 text-4xl mb-4"></i>
                <h1 class="text-2xl font-bold text-gray-700">Ingresar Token</h1>
                <p class="text-sm text-gray-500 mt-2">Introduce el token generado.</p>
            </div>

            <form id="tokenForm" class="space-y-6">
                <div class="input-group relative">
                    <i class="fas fa-ticket-alt input-icon absolute top-1/2 left-3 transform -translate-y-1/2 text-gray-400"></i>
                    <input type="text" id="tokenInput" name="token" placeholder="Token" required
                           class="form-input input-with-icon pl-10 w-full border border-gray-300 p-3 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>

                <button type="submit"
                        class="btn-primary bg-blue-700 hover:bg-blue-800 text-white w-full py-2 px-4 rounded-md flex items-center justify-center">
                    <i class="fas fa-check mr-2"></i> Validar Token
                </button>
            </form>
        </div>

        <!-- Paso 3: Cambiar Contraseña -->
        <div id="stepChangePassword" class="hidden">
            <div class="text-center mb-6">
                <i class="fas fa-lock text-green-600 text-4xl mb-4"></i>
                <h1 class="text-2xl font-bold text-gray-700">Cambiar Contraseña</h1>
                <p class="text-sm text-gray-500 mt-2">Ingresa y confirma tu nueva contraseña.</p>
            </div>

            <form id="changePasswordForm" class="space-y-6">
                <div class="input-group relative">
                    <i class="fas fa-lock input-icon absolute top-1/2 left-3 transform -translate-y-1/2 text-gray-400"></i>
                    <input type="password" id="newPassword" name="newPassword" placeholder="Nueva Contraseña" required
                           class="form-input input-with-icon pl-10 w-full border border-gray-300 p-3 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" />
                </div>
                <div class="input-group relative">
                    <i class="fas fa-lock input-icon absolute top-1/2 left-3 transform -translate-y-1/2 text-gray-400"></i>
                    <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirmar Contraseña"
                           required class="form-input input-with-icon pl-10 w-full border border-gray-300 p-3 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" />
                </div>

                <button type="submit"
                        class="btn-primary bg-green-600 hover:bg-green-700 text-white w-full py-2 px-4 rounded-md flex items-center justify-center">
                    <i class="fas fa-key mr-2"></i> Guardar Contraseña
                </button>
            </form>

            <div id="successMessage"
                 class="hidden mt-4 text-green-700 bg-green-100 p-3 rounded-md text-center font-semibold">
                Contraseña cambiada correctamente. Redirigiendo al login...
            </div>
        </div>

    </div>

    <script>
        let generatedToken = '';
        let userEmail = '';

        // Paso 1: Generar token
        document.getElementById('recoveryForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const email = document.getElementById('email').value.trim();
            if (!email) {
                alert('Ingresa tu correo.');
                return;
            }

            try {
                const response = await fetch('/Account/GenerarToken', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(email)
                });

                if (!response.ok) {
                    const error = await response.text();
                    alert(error);
                    return;
                }

                const data = await response.json();
                generatedToken = data.token;
                userEmail = email;

                // Mostrar el token en input visible para copiar y mostrar botón copiar y continuar
                const tokenContainer = document.getElementById('tokenContainer');
                const generatedTokenField = document.getElementById('generatedTokenField');
                const continueBtn = document.getElementById('continueBtn');

                generatedTokenField.value = generatedToken;
                tokenContainer.classList.remove('hidden');
                continueBtn.disabled = true;

            } catch (err) {
                console.error(err);
                alert('Error generando token.');
            }
        });

        // Botón copiar token
        document.getElementById('copyTokenBtn').addEventListener('click', function () {
            const generatedTokenField = document.getElementById('generatedTokenField');
            generatedTokenField.select();
            generatedTokenField.setSelectionRange(0, 99999); // Para móviles

            navigator.clipboard.writeText(generatedTokenField.value).then(() => {
                alert('Token copiado al portapapeles.');
                // Habilitar botón continuar solo después de copiar
                document.getElementById('continueBtn').disabled = false;
            }).catch(err => {
                console.error('Error copiando token:', err);
                alert('No se pudo copiar automáticamente. Copia manualmente.');
                document.getElementById('continueBtn').disabled = false; // Habilitar para no bloquear
            });
        });

        // Botón continuar hacia paso 2
        document.getElementById('continueBtn').addEventListener('click', function (e) {
            e.preventDefault();
            // Ocultar paso 1 y mostrar paso 2
            document.getElementById('stepEmail').classList.add('hidden');
            document.getElementById('stepToken').classList.remove('hidden');
        });

        // Paso 2: Validar token
        document.getElementById('tokenForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const tokenInput = document.getElementById('tokenInput').value.trim();

            if (!tokenInput) {
                alert('Ingresa el token.');
                return;
            }

            try {
                const response = await fetch('/Account/ValidarToken', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ correo: userEmail, token: tokenInput })
                });

                if (!response.ok) {
                    alert('Token inválido.');
                    return;
                }

                // Ir al paso 3
                document.getElementById('stepToken').classList.add('hidden');
                document.getElementById('stepChangePassword').classList.remove('hidden');

            } catch (err) {
                console.error(err);
                alert('Error validando token.');
            }
        });

        // Paso 3: Cambiar contraseña con validación
        document.getElementById('changePasswordForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const newPassword = document.getElementById('newPassword').value.trim();
            const confirmPassword = document.getElementById('confirmPassword').value.trim();
            const tokenInput = document.getElementById('tokenInput').value.trim();

            if (!newPassword || !confirmPassword) {
                alert('Llena ambos campos.');
                return;
            }

            if (newPassword !== confirmPassword) {
                alert('Las contraseñas no coinciden.');
                return;
            }

            // Validar: al menos una mayúscula, un número y más de 8 caracteres
            const hasUppercase = /[A-Z]/.test(newPassword);
            const hasNumber = /[0-9]/.test(newPassword);
            const isLongEnough = newPassword.length >= 8;

            if (!hasUppercase || !hasNumber || !isLongEnough) {
                alert('La contraseña debe tener al menos 8 caracteres, una letra mayúscula y un número.');
                return;
            }

            try {
                const response = await fetch('/Account/CambiarPassword', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ correo: userEmail, token: tokenInput, newPassword: newPassword })
                });

                if (!response.ok) {
                    alert('No se pudo cambiar la contraseña.');
                    return;
                }

                document.getElementById('successMessage').classList.remove('hidden');
                document.getElementById('changePasswordForm').classList.add('hidden');

                setTimeout(() => {
                    window.location.href = '@Url.Action("Login", "Account")';
                }, 2000);

            } catch (err) {
                console.error(err);
                alert('Error cambiando contraseña.');
            }
        });
    </script>

    @*
    <script>
        let generatedToken = '';
        let userEmail = '';

        // Paso 1: Generar token
        document.getElementById('recoveryForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const email = document.getElementById('email').value.trim();
            if (!email) {
                alert('Ingresa tu correo.');
                return;
            }

            try {
                const response = await fetch('/Account/GenerarToken', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(email)
                });

                if (!response.ok) {
                    const error = await response.text();
                    alert(error);
                    return;
                }

                const data = await response.json();
                generatedToken = data.token;
                userEmail = email;

                // Mostrar el token en input visible para copiar y mostrar botón copiar y continuar
                const tokenContainer = document.getElementById('tokenContainer');
                const generatedTokenField = document.getElementById('generatedTokenField');
                const continueBtn = document.getElementById('continueBtn');

                generatedTokenField.value = generatedToken;
                tokenContainer.classList.remove('hidden');
                continueBtn.disabled = true;

                // Opcional: puedes eliminar el alert si quieres evitar mostrar dos veces el token
                // alert(`Tu token es: ${generatedToken}`);

            } catch (err) {
                console.error(err);
                alert('Error generando token.');
            }
        });

        // Botón copiar token
        document.getElementById('copyTokenBtn').addEventListener('click', function () {
            const generatedTokenField = document.getElementById('generatedTokenField');
            generatedTokenField.select();
            generatedTokenField.setSelectionRange(0, 99999); // Para móviles

            navigator.clipboard.writeText(generatedTokenField.value).then(() => {
                alert('Token copiado al portapapeles.');
                // Habilitar botón continuar solo después de copiar
                document.getElementById('continueBtn').disabled = false;
            }).catch(err => {
                console.error('Error copiando token:', err);
                alert('No se pudo copiar automáticamente. Copia manualmente.');
                document.getElementById('continueBtn').disabled = false; // Habilitar para no bloquear
            });
        });

        // Botón continuar hacia paso 2
        document.getElementById('continueBtn').addEventListener('click', function (e) {
            e.preventDefault();
            // Ocultar paso 1 y mostrar paso 2
            document.getElementById('stepEmail').classList.add('hidden');
            document.getElementById('stepToken').classList.remove('hidden');
        });

        // Paso 2: Validar token
        document.getElementById('tokenForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const tokenInput = document.getElementById('tokenInput').value.trim();

            if (!tokenInput) {
                alert('Ingresa el token.');
                return;
            }

            try {
                const response = await fetch('/Account/ValidarToken', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ correo: userEmail, token: tokenInput })
                });

                if (!response.ok) {
                    alert('Token inválido.');
                    return;
                }

                // Ir al paso 3
                document.getElementById('stepToken').classList.add('hidden');
                document.getElementById('stepChangePassword').classList.remove('hidden');

            } catch (err) {
                console.error(err);
                alert('Error validando token.');
            }
        });

        // Paso 3: Cambiar contraseña
        document.getElementById('changePasswordForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const newPassword = document.getElementById('newPassword').value.trim();
            const confirmPassword = document.getElementById('confirmPassword').value.trim();
            const tokenInput = document.getElementById('tokenInput').value.trim();

            if (!newPassword || !confirmPassword) {
                alert('Llena ambos campos.');
                return;
            }

            if (newPassword !== confirmPassword) {
                alert('Las contraseñas no coinciden.');
                return;
            }

            try {
                const response = await fetch('/Account/CambiarPassword', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ correo: userEmail, token: tokenInput, newPassword: newPassword })
                });

                if (!response.ok) {
                    alert('No se pudo cambiar la contraseña.');
                    return;
                }

                document.getElementById('successMessage').classList.remove('hidden');
                document.getElementById('changePasswordForm').classList.add('hidden');

                setTimeout(() => {
                    window.location.href = '@Url.Action("Login", "Account")';
                }, 2000);

            } catch (err) {
                console.error(err);
                alert('Error cambiando contraseña.');
            }
        });
    </script>*@



</body>

</html>
